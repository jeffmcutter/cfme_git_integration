#!/bin/bash

#set -x

NAME=$(basename $0)

if [ ! -f .cfme ]
then
  echo ".cfme file must exist with HOST= to specify the CF appliance to work with."
  exit 1
fi

HOST=$(awk -F= '/HOST/ {print $2}' .cfme)
REMOTE_DIR="/tmp/$NAME.$$"

DEST="root@$HOST"
SSH="ssh $DEST"

function status {
  echo
  echo "*** $* ***"
}

function make_dirs {
  status "making working directories"
  $SSH "if [ ! -d $REMOTE_DIR ]; then mkdir -p $REMOTE_DIR; cd $REMOTE_DIR; mkdir dialogs service_catalogs roles tags buttons customization_templates reports; else exit 1; fi"
}

function clean_dirs {
  status "removing working directories"
  $SSH rm -rf $REMOTE_DIR
}

function dump_automate {
  status "dumping automate"
  $SSH cd /var/www/miq/vmdb \&\& script/rails runner script/rake evm:automate:backup BACKUP_ZIP_FILE=$REMOTE_DIR/automate.zip OVERWRITE=true &&
  status "copying automate.zip to ."
  scp $DEST:$REMOTE_DIR/automate.zip automate_$$.zip &&
  if [ ! -d automate ]; then mkdir automate; fi &&
  status "unzipping automate.zip into ./automate"
  unzip -q -d automate -o automate_$$.zip &&
  status "removing automate.zip"
  rm -f automate_$$.zip
}

function rsync_dir {
  status "rsyncing dir $1"
  rsync -av $DEST:$REMOTE_DIR/$1 .
}

function dumper_dir {
  status "dumping $1"
  $SSH miqexport $1 $REMOTE_DIR/$1
  rsync_dir $1
}

function dumper_file {
  status "dumping $1"
  $SSH miqexport $1 $REMOTE_DIR/$1/$1.yml
  rsync_dir $1
}

function load_automate {
  cd automate &&
  status "zipping ./automate" &&
  zip -q -r ../automate_$$.zip * &&
  cd - > /dev/null 2>&1 &&
  status "scp automate.zip to $DEST:$REMOTE_DIR" &&
  scp automate_$$.zip $DEST:$REMOTE_DIR/automate.zip &&
  status "remove automate.zip" &&
  rm -f automate_$$.zip &&
  status "importing automate.zip" &&
  $SSH cd /var/www/miq/vmdb \&\& script/rails runner script/rake evm:automate:restore BACKUP_ZIP_FILE=$REMOTE_DIR/automate.zip
}

function dump {
  dump_automate &&
  dumper_dir dialogs &&
  dumper_dir service_catalogs &&
  dumper_file roles &&
  dumper_file tags &&
  dumper_file buttons &&
  dumper_file customization_templates
  #dumper_dir reports &&
}

function load {
  load_automate
}

if [ $NAME == "cfme2here" ]
then
  make_dirs &&
  dump &&
  clean_dirs
elif [ $NAME == "automate2cfme" ]
then
  make_dirs &&
  load_automate &&
  clean_dirs

elif [ $NAME == "here2cfme" ]
then
  make_dirs &&
  load &&
  clean_dirs
fi

